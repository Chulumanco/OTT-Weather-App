@page "/historical"
@using BrowserInterop.Extensions
@using BrowserInterop.Geolocation
@using System.ComponentModel.DataAnnotations
@using WeatherApp.ApiHelper
@using WeatherApp.Data
@using WeatherApp.Entities
@inject Services.WeatherService weatherService


@if (weatherCorrectionInfoList != null && weatherCorrectionInfoList.Any())
{
    <table class="table">
        <thead>
            <tr>
             
                <th>Recorded At</th>
                <th>By</th>
                <th>Where</th>
                <th>Temperature</th>
                <th>Condition</th>
                <th>Humidity</th>
                <th>Clouds</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in weatherCorrectionInfoList)
            {
                <tr>
                    <td>@item.RecordedAt</td>
                    <td>@item.Name @item.Surname </td>
                    <td>@item.CurrentLocation</td>
                    <td>@item.Temperature</td>
                    <td>@item.WeatherCondition</td>
                    <td>@item.Humidity</td>
                    <td>@item.Clouds</td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No weather history available.</p>
}
@code {
    private List<WeatherCorrectionInfo> weatherCorrectionInfoList;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            weatherCorrectionInfoList = await weatherService.GetWeatherHistoryListAsync();
        }
        catch (ApiException ex)
        {
            // Handle API exception
            Console.WriteLine($"API Exception: {ex.Message}");
        }
        catch (Exception ex)
        {
            // Handle other exceptions
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}